@import "./../../styles/settings/all.scss";

$breakpoint: tablet;
$layout-icon-size: 36px;

.container {
  --padding-x: 1rem;
  padding: 0 var(--padding-x) var(--rb-space-3);

  @include respond-to($breakpoint) {
    --padding-x: 2rem;
  }
}

.grid,
.list {
  opacity: 0;
  transition: opacity 500ms linear;

  &.ready {
    opacity: 1;
  }
}

.grid {
  display: grid;
  grid-gap: var(--rb-space-5);
  padding: var(--rb-space-2) 0 var(--rb-space-7);

  @include respond-to(mobile-l) {
    grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));
  }

  @include respond-to(tablet) {
    grid-gap: var(--rb-space-6) var(--rb-space-1);
  }

  > * {
    // Set inline in the template
    grid-column: span var(--grid-span);
  }

  h3 {
    border-bottom: 1px solid hsla(0, 0%, 0%, 0);
    display: inline-flex;
    transition: var(--rb-transition-settings);
  }

  a {
    &:hover,
    &:focus {
      img {
        transform: scale(1.15);
        transition: transform 20s linear;
      }

      h3 {
        border-color: currentColor;
      }
    }
  }
}

.list {
  display: flex;
  flex-direction: column;
  padding: var(--rb-space-2) 0 0;

  @include respond-to(tablet) {
    display: grid;
    grid-gap: 0 1rem;
    grid-template-columns: 400px 1fr;
  }

  a {
    display: flex;
    line-height: 1;
    justify-content: space-between;
    padding: calc(var(--rb-space-3) + 4px) 0 var(--rb-space-3);

    @include respond-to(tablet) {
      grid-column: 2;
    }

    + a {
      border-top: 1px solid var(--rb-line-color);
    }

    &:first-of-type {
      // Optical
      padding-top: var(--rb-space-2);
    }

    h3,
    span {
      transition: opacity var(--rb-transition-settings);
    }

    &:hover {
      h3,
      span {
        opacity: var(--rb-text-hover-opacity);
      }
    }
  }
}

.map {
  display: block;
}

@import "./../../styles/settings/all.scss";

.toolbarWrapper {
  @include respond-to(tablet) {
    background-color: var(--rb-bg-color);
    border-bottom: 1px solid var(--rb-line-color);
    position: sticky;
    top: 0;
    z-index: 1;
  }

  &.loading {
    @include respond-to(tablet) {
      // Prevent flash if localstorage updates filter
      label {
        border-color: hsl(0, 0%, 0%, 0);
        color: var(--rb-text-color);
      }
    }
  }
}

.toolbar {
  align-items: center;
  display: flex;
  border: 1px solid var(--rb-line-color);
  border-width: 1px 0 1px 0;
  justify-content: space-between;
  position: relative;

  @include respond-to(tablet) {
    border: none;
  }

  > button {
    align-items: center;
    color: inherit;
    cursor: pointer;
    display: flex;
    font-size: var(--rb-font-size-1);
    justify-content: space-between;
    letter-spacing: 0.05em;
    padding: var(--rb-space-2) 0 calc(var(--rb-space-2) - 2px);
    text-transform: uppercase;
    width: 100%;

    @include respond-to(tablet) {
      display: none;
    }
  }
}

.filterList {
  background: var(--rb-bg-color);
  display: none;
  padding: 0 0 var(--rb-space-3);
  position: absolute;
  left: 0;
  right: 0;
  opacity: 0.9;
  top: 100%;
  z-index: 1;

  @include respond-to(tablet) {
    background: initial;
    display: flex;
    padding: 0;
    position: static;
  }

  &.open {
    display: block;

    @include respond-to(tablet) {
      display: flex;
    }
  }
}

.layoutList {
  @include respond-to(tablet) {
    display: flex;
    margin-right: -0.5em;
  }
}

.filterItem,
.layoutItem {
  display: flex;

  input {
    opacity: 0;
    pointer-events: none;
    position: absolute;
  }

  label {
    cursor: pointer;
    line-height: 1;
    padding: var(--rb-space-2) 0 calc(var(--rb-space-2) - 2px);
    text-transform: capitalize;
    user-select: none;
    width: 100%;

    @include respond-to(tablet) {
      border-bottom: 4px solid hsl(0, 0%, 0%, 0);
      opacity: var(--rb-text-hover-opacity);
      padding: var(--rb-space-3) var(--rb-space-3) var(--rb-space-2);
      transition: opacity var(--rb-transition-settings);

      &:hover {
        opacity: 1;
      }
    }
  }
}

.layoutItem {
  --icon-size: 36px;

  label {
    align-items: center;
    display: flex;
    height: var(--icon-size);
    justify-content: center;
    padding: 0.5em;
    width: var(--icon-size);

    svg {
      display: block;
      width: 100%;
    }

    &[for="map"] {
      svg {
        height: 20px; // optical
        transform: translateY(-1px);
      }
    }
  }
}

.activeFilter,
.activeLayout {
  --accent-color: hsl(var(--rb-primary-color-hs) 50%);

  @include respond-to(tablet) {
    label {
      color: white;
      opacity: 1;

      &:hover {
        opacity: 1;
      }
    }
  }
}

.activeFilter {
  label {
    @include respond-to(tablet) {
      border-color: var(--accent-color);
    }
  }
}

.layoutList {
  display: none;
}

.filterList,
.layoutList {
  @include respond-to(tablet) {
    display: flex;
  }
}

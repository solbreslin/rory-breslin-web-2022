@import "./../../styles/settings/all.scss";

$breakpoint: tablet;
$layout-icon-size: 36px;

.toolbar {
  display: flex;
  margin-bottom: 1rem;
  flex-direction: column;

  @include respond-to($breakpoint) {
    align-items: center;
    background: var(--rb-bg-color);
    border-bottom: 1px solid var(--rb-line-color);
    flex-direction: row;
    justify-content: space-between;
    margin: 0;
    padding: var(--rb-space-2) 0 0;
    position: sticky;
    top: 0;
    z-index: 1;
  }

  &.loading {
    // Prevent flash if localstorage updates filter
    label {
      border-color: hsl(0, 0%, 0%, 0);
      color: white;
    }
  }
}

.filterListWrapper {
  border: 1px solid grey;
  border-width: 1px 0 1px 0;
  padding: 0.5rem 0 0.4rem;
  position: relative;

  @include respond-to(tablet) {
    border: none;
    padding: 0;
  }

  > button {
    align-items: center;
    color: inherit;
    cursor: pointer;
    display: flex;
    font-size: var(--rb-font-sizes1);
    justify-content: space-between;
    text-transform: uppercase;
    width: 100%;

    @include respond-to(tablet) {
      display: none;
    }
  }
}

.filterList {
  background: white;
  display: none;
  padding: 0 0 0.5rem;
  position: absolute;
  left: 0;
  right: 0;
  top: 100%;
  z-index: 1;

  &.open {
    display: block;

    @include respond-to(tablet) {
      display: flex;
    }
  }

  @include respond-to($breakpoint) {
    background: hsla(0, 0%, 0%, 0);
    display: flex;
    padding: 0;
    position: static;
  }
}

.layoutList {
  display: none;
}

.filterList,
.layoutList {
  @include respond-to($breakpoint) {
    display: flex;
  }
}

.filterItem,
.layoutItem {
  display: flex;
  transition: 50ms ease-in-out;

  &:not(:last-child) {
    margin-right: 0.5rem;
  }

  input {
    opacity: 0;
    pointer-events: none;
    position: absolute;
  }

  label {
    cursor: pointer;
    line-height: 1;
    padding: 0.3em 0 0.2em;
    text-transform: capitalize;
    user-select: none;
    width: 100%;

    @include respond-to(tablet) {
      border-bottom: 4px solid hsl(0, 0%, 0%, 0);
      padding: 1rem 1rem 0.75em;
      transition: opacity var(--rb-transition-settings);

      &:hover {
        opacity: var(--rb-text-hover-opacity);
      }
    }
  }
}

.layoutItem {
  label {
    align-items: center;
    display: flex;
    height: $layout-icon-size;
    justify-content: center;
    padding: 0.5em;
    width: $layout-icon-size;

    svg {
      display: block;
    }

    &[for="map"] {
      svg {
        height: 20px; // optical
        transform: translateY(-1px);
      }
    }
  }
}

.activeFilter,
.activeLayout {
  label {
    text-decoration: underline;

    @include respond-to(tablet) {
      color: #7499d8;
      text-decoration: none;

      &:hover {
        opacity: 1;
      }
    }
  }
}

.activeFilter {
  @include respond-to(tablet) {
    label {
      border-color: #7499d8;
    }
  }
}

.layoutList {
  display: none;
}

.filterList,
.layoutList {
  @include respond-to($breakpoint) {
    display: flex;
  }
}
